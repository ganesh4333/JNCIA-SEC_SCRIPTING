Security zones
Host Inbound Traffic
Address objects
application objects and screens

Security zones:
1. Security zones is an logical entity that we can configure on srx device, and its is used to designate segments of your network
2. Interfaces are associated with security zones 
3. This allows you to logically group interfaces with different security requirements

Security zone for a scenario:
We are having 3 types of zones like:
Trust
Untrust
DMZ

Each zone need to be configure seperate rules and policies
no one can match like not same the policies are dmz and untrust and trust
Ex:
Trust->DMZ
Trust->Untrust

DMZ<-Untrust
DMZ<-Trust

Untrust->DMZ
Untrust<-Trust

Security zone components:
1. Security Policies
Security policies are rules that regulate traffic, a security zone
2. Screens
Screens or configurations used to block common network level attacks
3. Address books
Address books, and just like name suggests, an address book is a collection of address found with in a zone
4. Interfaces
Interfaces an only belong to one security zone
5. TCP-RST
So any traffic that does not belong to an existing session and does not have the same flag said will be dropped by SRX this is know as TCP Reset
EX:
Normal TCP connection 
|-SYN->|
|<-SA -|
|- ME -|
Attacker TCP connection
|-SYN ACK->|

Functional Zone
1. Used for special purposes, like hosting the management interface
2. Currently the only supported functional zone is managemnt
3. Adding an interface to the management zone allows the interface to be used for out-of-band management

Sample zone configuration
[edit]
functional-zone management 
{
	interfaces 
	{
		fe-0/0/7.0;
	}
}
security-zone trust 
{
	tcp-rst;
	host-inbound-traffic 
	{
		system-services
		{
			ssh;
			https;
		}
		protocols
		{
			all;
		}
	}
	interfaces
	{
		fe-0/0/1.0;
	}
}
security-zone untrust 
{
	tcp-rst;
	screen untrust-screen;
	interfaces
	{
		fe-0/0/0.0
		{
			host-inbound-traffic
			{
				system-services
				{
					dhcp;
					tftp;
				}
			}
		}
	}
}
security-zone dmz
{
	interfaces
	{
		fe-0/0/2.0
	}
}
