Firewall filters

Firewall filters are rules which define whether to accept or discard packets that are transiting an interface

If a packet is accepted by the firewall filter, we can apply actions such as class of service and traffic policing can be performed 

Class of service:
Class of service is a technique using which we can group similar types of traffic together and treat
Ex: We can prioritize voice traffic over all other types of traffic
Traffic policing:
Traffic policing is an mechanism by which we can control the maximum rate of traffic that is sent or recieved

Firewall filters are also refered as access control lists on equipment from other vendors
--------What is the purpose of the firewall filters------------
Firewall filters can be configured to accept or discard a packet before it enters or exits a port or interface


Couple of use cases of firewall filters
1. Firewall filters used to restrict traffic, which is destined for the routing engine based on its source protocol an application
--firewall filters are used to control traffic that terminates on the device or traffic that originates
2. Firewall filters can also be used to limit the rate of packets destined for the routing engine to protect againist flood or dos attacks

1. Firewall filters are stateless in nature --that means every packet inspects indivisually
2. Packet content are evaluated statically, and it does not keep tarck of the state of network connections

Firewall filters include a default term that discards all packets that the configuration does not explicitly permit through the defined terms

## firewall default rule
term implicit-rule 
{
    then discard;
}
There is no match in condition that means it matches any traffic that has not been matched by any other term and the action is to discard the traffic

from{
 if[match]{
  if[match]{
   if[match]{
    allow traffic;
    }}}
 then
  discard trafffic;
  
from{
 if[match]{
  allow traffic;
 }
 if[match]{
  allow traffic;
 }
 if[match]{
  allow traffic;
 }
 
 Firewall filter actions 
 1. terminating action
 2. Non terminating action
 3. Flow control action
 
 Terminating action
 1. stops evaluation of a firewall filter for a specific packet
 2. specified action is performed, no additional terms are examined
 3. Examples are accept, discard, reject
 
 when accept causes an system to accepts the packet
 
 when discard causes the system is silently discard the packet and without sending an ICMP message to the source address
 
 when reject causes the system is discard the packet and send an ICMP message back to the souce address
 
 Nonterminating action 
 Used to perform functions such as incrementing a counter, logging information about the packet header, sampling the data, or sending information to a remote host
 exaples count, log, policer or syslog
 
 count is used for to count the packets
 log is used for to store the packet header information
 policer is used to to write the policy for rate limit traffic
 syslog log the packet to the system log file
 
 Flow control action
 allows the device to perform configured actions on the packet and then evaluate the next term in the filter, rather than terminating the filter
 this is the next term action
 
 -----Note: Firewall filters can be applied to all interfaces to filer traffic entering or exiting them----- 
 it can also applied for lo0 interface to filter traffic destined for the system
 an IPV6 filter cannot applied to an IPV4 interface ---the protocol family of the filter and interface must match
 
 This is how it look like under the physical inteface
 
 interfaces ge-0/0/1
 {
 	unit 0
 	{
 		family inet
 		{
 			filter
 			{
 				input filter-in;
 				output filter-out;
 			}
 		}
 	}
 }
 
 
 
 next have to denying the traffic of icmp and all telnet both
 it's only discard the packets
 [edit firewall filter BLOCK-ICMP]
 term R1 {
 	from {
 		protocol icmp;
 	}
 	then {
 		discard;
 	}
 }
 applying an rule for specific interface
 [edit]
 # set interfaces ge-0/0/1.0 family inet filter input BLOCK-ICMP
 
 now let's see reject the packets
 [edit firewall filter BLOCK-ICMP]
 # set term R1 then reject
 # show
 
 the configuration like this
 term R1 {
 	from {
 		protocol icmp;
 	}
 	then {
 		reject;
 	}
 }
 for adding this command it deny's only icmp packets on rest of all packets
 
 [edit firewall filter BLOCK-ICMP]
 # set term ALLOW-OTHERS then accept
 
  term R1 {
 	from {
 		protocol icmp;
 	}
 	then {
 		reject;
 	}
 }
 term ALLOW-OTHERS {
 	then accpet;
 }
 
 configuring an telnet traffic 
 
 term R2 {
 	from {
 		protocol tcp;
 		destination-port telnet;
 	}
 	# SET TERM R2 THEN REJECT
 	then {
 		reject;
 	}
 }
 
 to change the order of polices to use the "insert" command
 # insert term R2 before term ALLOW-OTHERS
